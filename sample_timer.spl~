alias currentPID S0;
alias currentPCB S1;
currentPID = (PTBR - 1024)/8; //pid of the current process
currentPCB = READY_LIST + 32*currentPID; //location of the PCB of the current process
[currentPCB + 1] = 1; //set the state to ready
[currentPCB + 2] = BP;
[currentPCB + 3] = SP-1; //when the timer interrupt id called, SP is incremeted and stores the value of the IP. But we need the actual SP of the process afterwards

alias physicalSP S2;
physicalSP = ([PTBR + 2 * (SP/512)] * 512) + (SP%512); //get the physical SP because the timer is in kernel mode

[currentPCB + 4] = [physicalSP]; //IP is stored at the top of the stack
[currentPCB + 5] = PTBR; //set the PTBR and PTLR fields of the PCB
[currentPCB + 6] = PTLR;
[currentPCB + 7] = R0;
[currentPCB + 8] = R1;
[currentPCB + 9] = R2;
[currentPCB + 10] = R3;
[currentPCB + 11] = R4;
[currentPCB + 12] = R5;
[currentPCB + 13] = R6;
[currentPCB + 14] = R7;




ireturn;

