alias physicalSP S0;
alias sysCallNo S1;

physicalSP = [PTBR + 2*(SP/512)]*512 + (SP%512);
sysCallNo = [physicalSP - 1];

if(sysCallNo == 5) then
	alias filedescriptor S2;
	alias wordtowrite S3;
	filedescriptor = [physicalSP - 4];
	wordtowrite = [physicalSP - 3];
	
	if(filedescriptor<0 || filedescriptor>7) then //check if the filedescriptor is valid
		[physicalSP - 2] = -1;
		ireturn;
	endif;

	alias PID S4;
	alias PCB S5;
	PID = (PTBR-1024)/8;
	PCB = READY_LIST + 32*PID;
	alias syswidepointer S6;
	syswidepointer = [PCB + 15 + 2*filedescriptor + 0];
	if(syswidepointer==-1) then
		[physicalSP - 2] = -1;
		ireturn;
	endif;

	//alias syswidepointer S7;
	alias lseek S8;
	
	//syswidepointer = [ppentry];
	//lseek = [syswidepointer + 1];
	lseek = [PCB + 15 + 2*filedescriptor + 1];
	
	alias fatindex S9;
	fatindex = [FILE_TABLE + 2*syswidepointer];
	
	load(1,[FAT + 8*fatindex + 2]); //load the basic block to the scratchpad
	alias basblockindex S10;
	basblockindex = lseek/512;
	alias datablock S11;
	if([512 + basblockindex]==-1) then //the data block does not exist. Create one
		alias i S12;
		i = 0;
		while(i<448) do //traverse the disk free list to find an unused block
			if([6*512 + i]==0) then 
				[6*512 + i]=1; //set it to used
				datablock = i;
				[512 + basblockindex] = i; //set the entry in the basic block to this block number
				breakpoint;
				store(1,[FAT + 8*fatindex + 2]); //commit the basic block to disk
				[FAT + 8*fatindex + 1] = [FAT + 8*fatindex + 1] + 512; //increment file size by 512 in the FAT
				store(5,19); //commit FAT
				store(6,20); //commit df list
				break;
			endif;
			i = i + 1;
		endwhile;
	
		if(i==448) then //no free block
			[physicalSP - 2] = -1;
			ireturn;
		endif;

	endif;

	
	load(1,[FAT + 8*fatindex + 2]);
	datablock = [512 + basblockindex];
	load(1,datablock); //load this data block to the scratchpad
	[512 + lseek%512] = wordtowrite;
	store(1,datablock);
	
	//[ppentry + 1] = [ppentry + 1] + 1; //increment the lseek value
	[PCB + 15 + 2*filedescriptor + 1] = [PCB + 15 + 2*filedescriptor + 1] + 1;
	[physicalSP - 2] = 0;
	ireturn;
endif;
		
